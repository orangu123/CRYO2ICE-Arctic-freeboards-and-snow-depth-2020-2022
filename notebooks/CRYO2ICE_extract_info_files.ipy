# -*- coding: utf-8 -*-
"""
Created on Tue May 23 13:24:38 2023

Extraction of file information for each CRYO2ICE track (for table in Supporting Information).

The following information pr. CRYO2ICE track is extracted:
    - (int) IS2 reference ground track (RGT)
    - (str) IS2 start time (UTC)
    - (str) IS2 end time (UTC)
    - (int) CS2 absolute orbit number 
    - (int) CS2 relative orbit number
    - (str) CS2 start time (TAI)
    - (str) CS2 end time (TAI)

@author: rmfha
"""
# Import packages, initialisation 
import h5py
import numpy as np 
import netCDF4
import pandas as pd

# Extract CS2 data files (all data within folder)
files_check_CS2 = !ls E:/DTU/CRYO2ICE/Data/CRYO2ICE_data/CS2/L2/*.nc

# Extract IS2 data files (all data within defined folders)
files_check_IS2b = !ls E:/DTU/CRYO2ICE/Data/CRYO2ICE_data/IS2/Monthly_data/November/*_02.h5
files_check_IS2b_2 = !ls E:/DTU/CRYO2ICE/Data/CRYO2ICE_data/IS2/Monthly_data/December/*_02.h5
files_check_IS2_3 = !ls E:/DTU/CRYO2ICE/Data/CRYO2ICE_data/IS2/Monthly_data/January/*_01.h5
files_check_IS2b_3 = !ls E:/DTU/CRYO2ICE/Data/CRYO2ICE_data/IS2/Monthly_data/January/*_02.h5
files_check_IS2_4 = !ls E:/DTU/CRYO2ICE/Data/CRYO2ICE_data/IS2/Monthly_data/February/*_01.h5
files_check_IS2_5 = !ls E:/DTU/CRYO2ICE/Data/CRYO2ICE_data/IS2/Monthly_data/March/*_01.h5
files_check_IS2_6 = !ls E:/DTU/CRYO2ICE/Data/CRYO2ICE_data/IS2/Monthly_data/April/*_01.h5
# Combine all IS2 filename lists to one for direct comparison with CS2
files_total_IS2 =  files_check_IS2b  + files_check_IS2b_2 + files_check_IS2_3 + files_check_IS2b_3 + files_check_IS2_4  + files_check_IS2_5  + files_check_IS2_6 

# For IS2 and CS2 data, open and extract information. The following is extracted:
    # For IS2: start/end time, RGT
    # for CS2: start/ent time, absolute orbit number, relative orbit number
list_total = np.arange(0, len(files_total_IS2)) # list of numbers for all files 
appended_data = [] # initialisation 
for k in list_total: # for every file in both lists of file names
    
    ds = netCDF4.Dataset(files_check_CS2[k], 'r') # open CS2 data
    # Extract CS2 parameters
    rel_orbit_number = ds.getncattr('rel_orbit_number')
    abs_orbit_number = ds.getncattr('abs_orbit_number')
    start_CS2_TAI = ds.getncattr('first_record_time')
    start_CS2_TAI = start_CS2_TAI[4:30] # Remove irrelavant characters
    end_CS2_TAI = ds.getncattr('last_record_time')
    end_CS2_TAI = end_CS2_TAI[4:30] # Remove irrelavant characters
    
    # Extract IS2 parameters
    with h5py.File(files_total_IS2[k], "r") as f: # open IS2 data
        start_IS2_UTC = str(f['ancillary_data/data_start_utc'][:])
        start_IS2_UTC = start_IS2_UTC[3:32-3] # Remote irrelevant characters
        end_IS2_UTC = str(f['ancillary_data/data_end_utc'][:])
        end_IS2_UTC = end_IS2_UTC[3:32-3] # Remote irrelevant characters
        IS2_RGT = f['ancillary_data/end_rgt'][:]
    
    # save data as dataframe to append to a list of dataframes for pd.concat later
    df = pd.DataFrame(
        {
           'IS2_RGT':IS2_RGT,
           'start_IS2_UTC':start_IS2_UTC,
           'stop_IS2_UTC':end_IS2_UTC,
           'CS2_rel_orbit_number':rel_orbit_number, 
           'CS2_abs_orbit_number':abs_orbit_number,
           'start_CS2_TAI':start_CS2_TAI,
           'stop_CS2_TAI':end_CS2_TAI
        },
    )
    
    # append dataframes to list of dataframes
    appended_data.append(df)

# concat list of dataframes
df_appended = pd.concat(appended_data)
# save data to csv file 
df_appended.to_csv(r'E:/DTU/CRYO2ICE/cryo2ice_tracks.csv')
    
